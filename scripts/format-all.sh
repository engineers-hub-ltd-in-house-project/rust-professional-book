#!/bin/bash
# ÂÖ®„Éï„Ç°„Ç§„É´„ÇíÊï¥ÂΩ¢„Åô„ÇãÁµ±Âêà„Çπ„ÇØ„É™„Éó„Éà

set -e

echo "üîß Starting comprehensive formatting..."

# 1. Markdown/JSON/TOML/YAML (dprint - Ë∂ÖÈ´òÈÄü)
echo "üìù Formatting Markdown/JSON/TOML/YAML with dprint..."
if command -v dprint &> /dev/null; then
    dprint fmt
else
    echo "‚ö†Ô∏è  dprint not found. Install: cargo install dprint"
fi

# 2. Rust (rustfmt)
echo "ü¶Ä Formatting Rust code..."
if command -v rustfmt &> /dev/null; then
    find code-examples -name "*.rs" -exec rustfmt --edition 2021 {} \;
else
    echo "‚ö†Ô∏è  rustfmt not found. Install: rustup component add rustfmt"
fi

# 3. Python (black)
echo "üêç Formatting Python code..."
if command -v black &> /dev/null; then
    find code-examples -name "*.py" -exec black -q {} \;
else
    echo "‚ö†Ô∏è  black not found. Install: pip install black"
fi

# 4. Java (google-java-format)
echo "‚òï Formatting Java code..."
if command -v google-java-format &> /dev/null; then
    find code-examples -name "*.java" -exec google-java-format -i {} \;
else
    echo "‚ö†Ô∏è  google-java-format not found"
fi

# 5. C/C++ (clang-format)
echo "üîß Formatting C/C++ code..."
if command -v clang-format &> /dev/null; then
    find code-examples \( -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" \) -exec clang-format -i {} \;
else
    echo "‚ö†Ô∏è  clang-format not found"
fi

# 6. Êó•Êú¨Ë™ûÊñáÁ´†„ÉÅ„Çß„ÉÉ„ÇØ (textlint)
echo "üáØüáµ Checking Japanese text with textlint..."
if [ -f "package.json" ] && command -v npm &> /dev/null; then
    npm run textlint:fix
else
    echo "‚ö†Ô∏è  textlint not configured. Run: npm install"
fi

echo "‚úÖ Formatting complete!"
echo ""
echo "üìä Summary:"
echo "  - Markdown/Config files: dprint"
echo "  - Rust: rustfmt"
echo "  - Python: black"
echo "  - Java: google-java-format"
echo "  - C/C++: clang-format"
echo "  - Japanese text: textlint"